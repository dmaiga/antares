# Generated by Django 5.2.5 on 2025-08-20 21:52

import authentication.models
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('telephone_perso', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message='Format de numéro invalide.')])),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('contact_urgence', models.CharField(blank=True, max_length=100)),
                ('quartier', models.CharField(blank=True, max_length=100)),
                ('rue', models.CharField(blank=True, max_length=50)),
                ('porte', models.CharField(blank=True, max_length=50)),
                ('ville', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('pause', 'En pause'), ('termine', 'Terminé')], default='actif', max_length=10)),
                ('telephone_pro', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?\\s*(?:\\d[\\s\\-()]?){8,}$', message='Format de numéro invalide.')])),
                ('poste_occupe', models.CharField(blank=True, max_length=100)),
                ('contract_type', models.CharField(blank=True, choices=[('cdi', 'CDI'), ('cdd', 'CDD'), ('stage', 'Stage'), ('interim', 'Intérim')], max_length=10)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('last_evaluation', models.DateField(blank=True, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0, message='Le salaire ne peut pas être négatif.')])),
                ('working_hours', models.CharField(blank=True, max_length=50)),
                ('remote_days', models.PositiveIntegerField(default=0)),
                ('cv', models.FileField(blank=True, null=True, upload_to='cvs/')),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='contracts/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'Cet email est déjà utilisé.'}, max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('rh', 'Ressources Humaines'), ('employe', 'Employé'), ('stagiaire', 'Stagiaire'), ('entreprise', 'Entreprise'), ('recruteur', 'Recruteur'), ('candidat', 'Candidat')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', authentication.models.UserManager()),
            ],
        ),
    ]
