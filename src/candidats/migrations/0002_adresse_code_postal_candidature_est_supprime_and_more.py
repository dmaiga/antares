# Generated by Django 5.2.5 on 2025-08-28 14:11

import candidats.models
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('candidats', '0001_initial'),
        ('jobs', '0004_alter_joboffer_secteur_alter_joboffer_societe'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='adresse',
            name='code_postal',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Code Postal'),
        ),
        migrations.AddField(
            model_name='candidature',
            name='est_supprime',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='competence',
            name='est_supprime',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='diplome',
            name='est_supprime',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='document',
            name='est_supprime',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='entretien',
            name='est_supprime',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experienceprofessionnelle',
            name='est_supprime',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='document',
            name='fichier',
            field=models.FileField(upload_to=candidats.models.document_path),
        ),
        migrations.CreateModel(
            name='EvaluationEntretien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_technique', models.PositiveIntegerField(choices=[(1, '1 - Insuffisant'), (2, '2 - En développement'), (3, '3 - Satisfaisant'), (4, '4 - Bon'), (5, '5 - Excellent')], verbose_name='Compétences techniques')),
                ('note_communication', models.PositiveIntegerField(choices=[(1, '1 - Insuffisant'), (2, '2 - En développement'), (3, '3 - Satisfaisant'), (4, '4 - Bon'), (5, '5 - Excellent')], verbose_name='Communication')),
                ('note_motivation', models.PositiveIntegerField(choices=[(1, '1 - Insuffisant'), (2, '2 - En développement'), (3, '3 - Satisfaisant'), (4, '4 - Bon'), (5, '5 - Excellent')], verbose_name='Motivation')),
                ('note_culture', models.PositiveIntegerField(choices=[(1, '1 - Insuffisant'), (2, '2 - En développement'), (3, '3 - Satisfaisant'), (4, '4 - Bon'), (5, '5 - Excellent')], verbose_name='Fit culturel')),
                ('points_forts', models.TextField(verbose_name='Points forts observés')),
                ('points_amelioration', models.TextField(verbose_name="Points d'amélioration")),
                ('recommandation', models.TextField(verbose_name='Recommandation')),
                ('recommander', models.BooleanField(default=False, verbose_name='Recommander ce candidat')),
                ('niveau_urgence', models.PositiveIntegerField(choices=[(1, 'Faible'), (2, 'Moyen'), (3, 'Élevé')], default=2, verbose_name="Niveau d'urgence")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('entretien', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='candidats.entretien')),
                ('evaluateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Évaluateur (RH)')),
            ],
            options={
                'verbose_name': "Évaluation d'entretien",
                'verbose_name_plural': "Évaluations d'entretien",
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCandidature',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_postulation', models.DateTimeField(blank=True, editable=False)),
                ('date_mise_a_jour', models.DateTimeField(blank=True, editable=False)),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('POSTULE', 'Postulé'), ('RELANCE', 'Relancé'), ('ENTRETIEN1', '1er entretien'), ('ENTRETIEN2', '2ème entretien'), ('ENTRETIEN3', '3ème entretien'), ('OFFRE', 'Offre reçue'), ('ACCEPTE', 'Accepté'), ('REFUSE', 'Refusé'), ('RETIRE', 'Retiré')], default='POSTULE', max_length=20)),
                ('canal', models.CharField(choices=[('SITE', 'Site carrière'), ('LINKEDIN', 'LinkedIn'), ('INDEED', 'Indeed'), ('APEC', 'APEC'), ('POLE_EMPLOI', 'Pôle emploi'), ('COOPTATION', 'Cooptation'), ('RESEAU', 'Réseau personnel'), ('AUTRE', 'Autre')], default='SITE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('motivation', models.TextField(blank=True, verbose_name='Motivation pour ce poste')),
                ('points_forts', models.TextField(blank=True, verbose_name='Points forts pour ce poste')),
                ('points_faibles', models.TextField(blank=True, verbose_name='Points à améliorer')),
                ('nombre_relances', models.PositiveIntegerField(default=0, verbose_name='Nombre de relances')),
                ('date_derniere_relance', models.DateTimeField(blank=True, null=True, verbose_name='Date dernière relance')),
                ('est_supprime', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('candidat', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('cv_utilise', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='candidats.document')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lettre_motivation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='candidats.document')),
                ('offre', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jobs.joboffer')),
            ],
            options={
                'verbose_name': 'historical Candidature',
                'verbose_name_plural': 'historical Candidatures',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEntretien',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type_entretien', models.CharField(choices=[('PHONE', 'Téléphonique'), ('VIDEO', 'Visioconférence'), ('PRESENTIEL', 'Présentiel'), ('TEST', 'Test technique')], default='PRESENTIEL', max_length=20)),
                ('statut', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('CONFIRME', 'Confirmé'), ('TERMINE', 'Terminé'), ('ANNULE', 'Annulé'), ('REPORTE', 'Reporté')], default='PLANIFIE', max_length=20)),
                ('date_prevue', models.DateTimeField(verbose_name='Date prévue')),
                ('duree_prevue', models.PositiveIntegerField(default=60, verbose_name='Durée prévue (minutes)')),
                ('date_reelle', models.DateTimeField(blank=True, null=True, verbose_name='Date réelle')),
                ('duree_reelle', models.PositiveIntegerField(blank=True, null=True, verbose_name='Durée réelle (minutes)')),
                ('interlocuteurs', models.TextField(verbose_name='Interlocuteur(s)')),
                ('poste_interlocuteurs', models.TextField(blank=True, verbose_name='Poste des interlocuteurs')),
                ('ordre_du_jour', models.TextField(blank=True, verbose_name='Ordre du jour')),
                ('notes_preparation', models.TextField(blank=True, verbose_name='Notes de préparation')),
                ('feedback', models.TextField(blank=True, verbose_name='Feedback')),
                ('points_abordes', models.TextField(blank=True, verbose_name='Points abordés')),
                ('questions_posées', models.TextField(blank=True, verbose_name='Questions posées')),
                ('note_globale', models.PositiveIntegerField(blank=True, null=True, verbose_name='Note globale/10')),
                ('points_positifs', models.TextField(blank=True, verbose_name='Points positifs')),
                ('points_amelioration', models.TextField(blank=True, verbose_name="Points d'amélioration")),
                ('suite_prevue', models.TextField(blank=True, verbose_name='Suite prévue')),
                ('lieu', models.TextField(blank=True, verbose_name="Lieu de l'entretien")),
                ('lien_video', models.URLField(blank=True, verbose_name='Lien visioconférence')),
                ('codes_acces', models.TextField(blank=True, verbose_name="Codes d'accès")),
                ('date_creation', models.DateTimeField(blank=True, editable=False)),
                ('date_maj', models.DateTimeField(blank=True, editable=False)),
                ('est_supprime', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('candidature', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='candidats.candidature')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Entretien',
                'verbose_name_plural': 'historical Entretiens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
