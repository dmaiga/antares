# Generated by Django 5.2.5 on 2025-08-20 21:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0002_initial'),
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ligne1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse ligne 1')),
                ('ville', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ville')),
                ('pays', models.CharField(blank=True, default='France', max_length=100, null=True, verbose_name='Pays')),
            ],
            options={
                'verbose_name': 'Adresse',
                'verbose_name_plural': 'Adresses',
            },
        ),
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom de la compétence')),
                ('categorie', models.CharField(choices=[('HARD', 'Hard Skill'), ('SOFT', 'Soft Skill'), ('LANGUE', 'Langue'), ('AUTRE', 'Autre')], default='AUTRE', max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Compétence',
                'verbose_name_plural': 'Compétences',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Diplome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intitule', models.CharField(max_length=200)),
                ('etablissement', models.CharField(max_length=200)),
                ('type_etablissement', models.CharField(choices=[('UNIV', 'Université'), ('ECOLE', 'École'), ('LYCEE', 'Lycée'), ('CFA', 'Centre de formation'), ('AUTRE', 'Autre')], default='UNIV', max_length=10)),
                ('niveau', models.CharField(choices=[('CAP_BEP', 'CAP / BEP'), ('BAC', 'Baccalauréat'), ('BAC+2', 'Bac+2 (BTS, DUT)'), ('BAC+3', 'Licence'), ('BAC+4', 'Master 1'), ('BAC+5', 'Master 2'), ('DOC', 'Doctorat'), ('AUTRE', 'Autre')], max_length=20)),
                ('domaine', models.CharField(max_length=100)),
                ('pays_obtention', models.CharField(default='France', max_length=100, verbose_name="Pays d'obtention")),
                ('ville_obtention', models.CharField(blank=True, max_length=100, verbose_name="Ville d'obtention")),
                ('date_debut', models.DateField(blank=True, null=True, verbose_name='Date de début')),
                ('date_obtention', models.DateField()),
                ('mention', models.CharField(blank=True, max_length=50, verbose_name='Mention')),
                ('note', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Note/20')),
                ('description', models.TextField(blank=True)),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diplomes', to=settings.AUTH_USER_MODEL)),
                ('competences', models.ManyToManyField(blank=True, related_name='diplomes', to='candidats.competence')),
            ],
            options={
                'verbose_name': 'Diplôme',
                'verbose_name_plural': 'Diplômes',
                'ordering': ['-date_obtention'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(choices=[('CV', 'Curriculum Vitae'), ('LM', 'Lettre de motivation'), ('DIPLOME', 'Diplôme'), ('RECOMMANDATION', 'Lettre de recommandation'), ('PORTFOLIO', 'Portfolio'), ('CERTIFICAT', 'Certificat'), ('AUTRE', 'Autre document')], max_length=20)),
                ('fichier', models.FileField(upload_to='candidats/documents/%Y/%m/%d/')),
                ('nom', models.CharField(max_length=200)),
                ('version', models.PositiveIntegerField(default=1, verbose_name='Version')),
                ('langue', models.CharField(choices=[('FR', 'Français'), ('EN', 'Anglais'), ('ES', 'Espagnol'), ('DE', 'Allemand'), ('IT', 'Italien'), ('AUTRE', 'Autre')], default='FR', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('mots_cles', models.CharField(blank=True, max_length=255, verbose_name='Mots-clés')),
                ('est_public', models.BooleanField(default=False, verbose_name='Visible par les recruteurs')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Document actif')),
                ('est_modele', models.BooleanField(default=False, verbose_name='Modèle de document')),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('taille_fichier', models.PositiveIntegerField(editable=False, verbose_name='Taille du fichier (octets)')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-date_upload'],
                'unique_together': {('candidat', 'nom', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_postulation', models.DateTimeField(auto_now_add=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('POSTULE', 'Postulé'), ('RELANCE', 'Relancé'), ('ENTRETIEN1', '1er entretien'), ('ENTRETIEN2', '2ème entretien'), ('ENTRETIEN3', '3ème entretien'), ('OFFRE', 'Offre reçue'), ('ACCEPTE', 'Accepté'), ('REFUSE', 'Refusé'), ('RETIRE', 'Retiré')], default='POSTULE', max_length=20)),
                ('canal', models.CharField(choices=[('SITE', 'Site carrière'), ('LINKEDIN', 'LinkedIn'), ('INDEED', 'Indeed'), ('APEC', 'APEC'), ('POLE_EMPLOI', 'Pôle emploi'), ('COOPTATION', 'Cooptation'), ('RESEAU', 'Réseau personnel'), ('AUTRE', 'Autre')], default='SITE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('motivation', models.TextField(blank=True, verbose_name='Motivation pour ce poste')),
                ('points_forts', models.TextField(blank=True, verbose_name='Points forts pour ce poste')),
                ('points_faibles', models.TextField(blank=True, verbose_name='Points à améliorer')),
                ('nombre_relances', models.PositiveIntegerField(default=0, verbose_name='Nombre de relances')),
                ('date_derniere_relance', models.DateTimeField(blank=True, null=True, verbose_name='Date dernière relance')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to=settings.AUTH_USER_MODEL)),
                ('offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.joboffer')),
                ('cv_utilise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cv_candidatures', to='candidats.document')),
                ('documents_supplementaires', models.ManyToManyField(blank=True, related_name='candidatures_supp', to='candidats.document')),
                ('lettre_motivation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lm_candidatures', to='candidats.document')),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'ordering': ['-date_postulation'],
                'unique_together': {('candidat', 'offre')},
            },
        ),
        migrations.CreateModel(
            name='Entretien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_entretien', models.CharField(choices=[('PHONE', 'Téléphonique'), ('VIDEO', 'Visioconférence'), ('PRESENTIEL', 'Présentiel'), ('TEST', 'Test technique')], default='PRESENTIEL', max_length=20)),
                ('statut', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('CONFIRME', 'Confirmé'), ('TERMINE', 'Terminé'), ('ANNULE', 'Annulé'), ('REPORTE', 'Reporté')], default='PLANIFIE', max_length=20)),
                ('date_prevue', models.DateTimeField(verbose_name='Date prévue')),
                ('duree_prevue', models.PositiveIntegerField(default=60, verbose_name='Durée prévue (minutes)')),
                ('date_reelle', models.DateTimeField(blank=True, null=True, verbose_name='Date réelle')),
                ('duree_reelle', models.PositiveIntegerField(blank=True, null=True, verbose_name='Durée réelle (minutes)')),
                ('interlocuteurs', models.TextField(verbose_name='Interlocuteur(s)')),
                ('poste_interlocuteurs', models.TextField(blank=True, verbose_name='Poste des interlocuteurs')),
                ('ordre_du_jour', models.TextField(blank=True, verbose_name='Ordre du jour')),
                ('notes_preparation', models.TextField(blank=True, verbose_name='Notes de préparation')),
                ('feedback', models.TextField(blank=True, verbose_name='Feedback')),
                ('points_abordes', models.TextField(blank=True, verbose_name='Points abordés')),
                ('questions_posées', models.TextField(blank=True, verbose_name='Questions posées')),
                ('note_globale', models.PositiveIntegerField(blank=True, null=True, verbose_name='Note globale/10')),
                ('points_positifs', models.TextField(blank=True, verbose_name='Points positifs')),
                ('points_amelioration', models.TextField(blank=True, verbose_name="Points d'amélioration")),
                ('suite_prevue', models.TextField(blank=True, verbose_name='Suite prévue')),
                ('lieu', models.TextField(blank=True, verbose_name="Lieu de l'entretien")),
                ('lien_video', models.URLField(blank=True, verbose_name='Lien visioconférence')),
                ('codes_acces', models.TextField(blank=True, verbose_name="Codes d'accès")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('candidature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entretiens', to='candidats.candidature')),
            ],
            options={
                'verbose_name': 'Entretien',
                'verbose_name_plural': 'Entretiens',
                'ordering': ['-date_prevue'],
            },
        ),
        migrations.CreateModel(
            name='ExperienceProfessionnelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poste', models.CharField(max_length=200)),
                ('entreprise', models.CharField(max_length=200)),
                ('secteur', models.CharField(choices=[('IT', 'Informatique/Télécoms'), ('SANTE', 'Santé'), ('BANQUE', 'Banque/Assurance'), ('COMMERCE', 'Commerce'), ('INDUSTRIE', 'Industrie'), ('EDUCATION', 'Éducation'), ('CONSULTING', 'Consulting'), ('AUTRE', 'Autre')], default='AUTRE', max_length=20)),
                ('type_contrat', models.CharField(choices=[('CDI', 'CDI'), ('CDD', 'CDD'), ('STAGE', 'Stage'), ('ALTERNANCE', 'Alternance'), ('FREELANCE', 'Freelance'), ('INTERIM', 'Intérim'), ('APPRENTISSAGE', 'Apprentissage')], default='CDI', max_length=20)),
                ('lieu', models.CharField(max_length=200)),
                ('pays', models.CharField(default='France', max_length=100)),
                ('remote', models.BooleanField(default=False, verbose_name='Télétravail')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('en_poste', models.BooleanField(default=False)),
                ('salaire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salaire annuel')),
                ('equipe', models.PositiveIntegerField(blank=True, null=True, verbose_name="Taille de l'équipe")),
                ('description', models.TextField()),
                ('realisation', models.TextField(blank=True, verbose_name='Réalisations marquantes')),
                ('manager', models.CharField(blank=True, max_length=100, verbose_name='Manager/Référent')),
                ('contact_reference', models.CharField(blank=True, max_length=200, verbose_name='Contact de référence')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to=settings.AUTH_USER_MODEL)),
                ('competences', models.ManyToManyField(blank=True, related_name='experiences', to='candidats.competence')),
            ],
            options={
                'verbose_name': 'Expérience professionnelle',
                'verbose_name_plural': 'Expériences professionnelles',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='ProfilCandidat',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profil_candidat', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='candidat/avatars/', verbose_name='Photo de profil')),
                ('telephone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?\\s*(?:\\d[\\s\\-()]?){8,}$')])),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('salaire_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salaire minimum souhaité')),
                ('salaire_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salaire maximum souhaité')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='Profil LinkedIn')),
                ('portfolio_url', models.URLField(blank=True, verbose_name='Portfolio')),
                ('recherche_active', models.BooleanField(default=True, verbose_name='En recherche active')),
                ('date_debut_recherche', models.DateField(blank=True, null=True, verbose_name='Date de début de recherche')),
                ('accepte_newsletter', models.BooleanField(default=False)),
                ('cgu_acceptees', models.BooleanField(default=False)),
                ('disponible', models.BooleanField(default=True, verbose_name='Disponible immédiatement')),
                ('mobilite_geographique', models.BooleanField(default=False)),
                ('rayon_mobilite', models.PositiveIntegerField(blank=True, default=50, null=True, verbose_name='Rayon de mobilité (km)')),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('derniere_maj', models.DateTimeField(auto_now=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True, verbose_name='Dernière connexion')),
                ('adresse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='candidats.adresse')),
                ('competences', models.ManyToManyField(blank=True, related_name='candidats', to='candidats.competence')),
            ],
            options={
                'verbose_name': 'Profil Candidat',
                'verbose_name_plural': 'Profils Candidats',
            },
        ),
    ]
